@model IEnumerable<Car_Rent.Models.User>

@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/AdminLayout/_AdminLayout.cshtml";
    var total = (int)(ViewBag.TotalItems ?? 0);
    var page = (int)(ViewBag.Page ?? 1);
    var pageSize = (int)(ViewBag.PageSize ?? 10);
    var totalPages = (int)Math.Ceiling((double)total / pageSize);
    string? sortBy = ViewBag.SortBy;
}

@if (TempData["AddStaffToTenantSuccess"] is not null)
    {
    <div class="alert alert-success">@TempData["AddStaffToTenantSuccess"]</div>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    }
@if (TempData["AddStaffToTenantError"] is not null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Users</h2>
    @if(User.IsInRole("Owner"))
    {
        <a asp-action="Add" asp-controller="TenantMembers" style="margin-top:12px" class="btn btn-success">Create New</a>
    }
    else
    {
        <a asp-action="Create" style="margin-top:12px" class="btn btn-success">Create New</a>
    }
</div>


<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <select name="sortBy" class="form-select">
            <option value="UsernameDesc" selected="@(sortBy=="UsernameDesc")">Username ↓</option>
            <option value="UsernameAsc" selected="@(sortBy=="UsernameAsc")">Username ↑</option>
            <option value="CreatedDateAsc" selected="@(sortBy=="CreatedDateAsc")">Created Date ↑</option>
            <option value="CreatedDateDesc" selected="@(sortBy=="CreatedDateDesc")">Created Date ↓</option>

        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-primary">Filter</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
        <thead class="table-white">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().FullName)</th>
                <th>@Html.DisplayNameFor(model => model.First().Username)</th>
                @* <th>@Html.DisplayNameFor(model => model.First().PasswordHash)</th> *@
                <th>Status</th>
                <th>@Html.DisplayNameFor(model => model.First().Email)</th>
                <th>@Html.DisplayNameFor(model => model.First().PhoneNumber)</th>
                <th>@Html.DisplayNameFor(model => model.First().Role)</th>
                <th>@Html.DisplayNameFor(model => model.First().CreatedDate)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.FullName</td>
                    <td>@item.Username</td>
                    @* <td>@item.PasswordHash</td> *@
                    <td>
                        @if (item.IsBlocked)
                        {
                            <span class="badge bg-danger">Blocked</span>
                        }
                        else
                        {
                            <span class="badge bg-success">Active</span>
                        }
                    </td>
                    <td>@item.Email</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.Role?.RoleName</td>
                    <td>@item.CreatedDate?.ToString("dd/MM/yyyy")</td>
                    <td>
                        <div class="btn-group">
                            <a asp-action="Edit" asp-route-id="@item.UserId" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.UserId" class="btn btn-sm btn-info text-white">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.UserId" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this user?');">Delete</a>
                            <a asp-action="ResetPassword" asp-route-id="@item.UserId" class="btn btn-sm btn-primary">Reset Password</a>
                            @if (!item.IsBlocked)
                            {
                                <form asp-action="Block" asp-route-id="@item.UserId" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger"
                                            onclick="return confirm('Block user @item.Username ?');">
                                        Block
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Unblock" asp-route-id="@item.UserId" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-success"
                                            onclick="return confirm('Unblock user @item.Username ?');">
                                        Unblock
                                    </button>
                                </form>
                            }

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (totalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <!-- First -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize, sortBy })">« First</a>
            </li>

            <!-- Prev -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page - 1, pageSize, sortBy })">‹ Prev</a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize, sortBy })">@i</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page + 1, pageSize, sortBy })">Next ›</a>
            </li>

            <!-- Last -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize, sortBy })">Last »</a>
            </li>
        </ul>
    </nav>
}
