@using System.Security.Claims
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Cental - Car Rent Website Template</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;0,700;0,900;1,400;1,700;1,900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">


    <!-- Libraries Stylesheet -->
    <link href="~/Main/lib/animate/animate.min.css" rel="stylesheet">
    <link href="~/Main/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">


    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/Main/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/Main/css/style.css" rel="stylesheet">
</head>
@RenderSection("Scripts", required: false)

@if (User.IsInRole("Staff"))
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    <script>
        (function() {
          const myId = parseInt('@User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)');
          const badge = document.getElementById('supportBadge'); // <span> ở navbar, nếu có
          const queueIds = new Set();     // các conv chưa gán (NewConversation)
          const myActiveIds = new Set();  // các conv đã gán CHO TÔI có hành động (CustomerBack hoặc SeedAssigned)

          function totalCount(){ return queueIds.size + myActiveIds.size; }
          function updateBadge(){
            if (!badge) return;
            const n = totalCount();
            badge.textContent = String(n);
            badge.hidden = (n === 0);
          }
          function toast(msg){
            const t = document.createElement('div');
            t.className = 'position-fixed end-0 top-0 m-3 p-3 bg-dark text-white rounded-3 shadow';
            t.style.zIndex = 1080; t.textContent = msg;
            document.body.appendChild(t);
            setTimeout(()=>t.remove(), 3000);
          }

          const conn = new signalR.HubConnectionBuilder()
            .withUrl('/hubs/chat')
            .withAutomaticReconnect()
            .build();

          async function joinLobbyAndSync() {
            try {
              await conn.invoke('JoinStaffLobby');  // chủ động join lobby
              await syncCounts();                   // đồng bộ phòng hờ
            } catch {}
          }

          // ====== Realtime handlers ======
          // 1) Khách mới -> vào hàng đợi chưa gán
          conn.on('NewConversation', i => {
            queueIds.add(i.conversationId);
            updateBadge();
            toast('Khách mới yêu cầu hỗ trợ');
          });

          // 2) Có người nhận -> nếu trước đó đang nằm trong hàng đợi, bỏ ra
          conn.on('ConversationAssigned', e => {
            queueIds.delete(e.conversationId);
            // Nếu chính tôi nhận, add vào myActive (tuỳ anh có muốn cộng badge khi mình đã nhận hay không)
            if (e.staffId && parseInt(e.staffId) === myId) {
              myActiveIds.add(e.conversationId);
            }
            updateBadge();
          });

          // 3) Khách quay lại phòng đã gán cho TÔI -> cộng vào myActive
          conn.on('CustomerBack', e => {
            myActiveIds.add(e.conversationId);
            updateBadge();
            toast('Khách vừa quay lại phòng chat của bạn');
          });

          // 4) (tuỳ chọn) Khi cuộc chat bị đóng -> loại khỏi tất cả danh sách
          conn.on('ConversationClosed', e => {
            queueIds.delete(e.conversationId);
            myActiveIds.delete(e.conversationId);
            updateBadge();
          });

          // 5) Seed khi vừa kết nối (nếu anh đã gửi SeedAssigned/SeedQueue ở server)
          conn.on('SeedQueue', items => {
            (items || []).forEach(i => queueIds.add(i.conversationId));
            updateBadge();
          });
          conn.on('SeedAssigned', items => {
            // Chỉ count những cuộc đang open đã gán cho tôi
            (items || []).forEach(i => myActiveIds.add(i.conversationId));
            updateBadge();
          });

          conn.onreconnected(joinLobbyAndSync);
          conn.start().then(joinLobbyAndSync).catch(console.error);

          // ====== Đồng bộ phòng hờ: nếu client vừa vào mà trượt mất event ======
          async function syncCounts(){
            try {
              const r = await fetch('/Chat/Counts'); // endpoint bên dưới
              const data = await r.json();
              // reset và sync
              queueIds.clear(); myActiveIds.clear();
              (data.queueIds || []).forEach(id => queueIds.add(id));
              (data.assignedIds || []).forEach(id => myActiveIds.add(id));
              updateBadge();
            } catch {}
          }
          setInterval(syncCounts, 10000);
        })();
    </script>
}


<body>

    <!-- Spinner Start -->
    <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <!-- Spinner End -->
    <!-- Topbar Start -->
    @await Html.PartialAsync("_Topbar")
    <!-- Topbar End -->
    <!-- Navbar & Hero Start -->
    @await Html.PartialAsync("_Header")
    <!-- Navbar & Hero End -->
    <!-- Carousel Start -->
    @RenderBody()
    <!-- Testimonial End -->
    <!-- Footer Start -->
    @await Html.PartialAsync("_Footer")
    <!-- Footer End -->
    <!-- Copyright Start -->
    @await Html.PartialAsync("_Copyright")
    <!-- Copyright End -->
    <!-- Back to Top -->
    <a href="#" class="btn btn-secondary btn-lg-square rounded-circle back-to-top"><i class="fa fa-arrow-up"></i></a>


    <!-- JavaScript Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/Main/lib/wow/wow.min.js"></script>
    <script src="~/Main/lib/easing/easing.min.js"></script>
    <script src="~/Main/lib/waypoints/waypoints.min.js"></script>
    <script src="~/Main/lib/counterup/counterup.min.js"></script>
    <script src="~/Main/lib/owlcarousel/owl.carousel.min.js"></script>


    <!-- Template Javascript -->
    <script src="~/Main/js/main.js"></script>
</body>

</html>