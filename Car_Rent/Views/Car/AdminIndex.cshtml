@model IEnumerable<Car_Rent.Models.Car>

@{
    ViewData["Title"] = "Car Management";
    Layout = "~/Views/Shared/AdminLayout/_AdminLayout.cshtml";
    var total = (int)(ViewBag.TotalItems ?? 0);
    var page = (int)(ViewBag.Page ?? 1);
    var pageSize = (int)(ViewBag.PageSize ?? 10);
    var totalPages = (int)Math.Ceiling((double)total / pageSize);
    var currentSearch = ViewData["CurrentSearch"] as string;
    string? sortBy = ViewBag.SortBy;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Car List</h2>
    <a asp-action="Create" style="margin-top:12px" class="btn btn-success">Create New</a>
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <select name="sortBy" class="form-select">
            <option value="NameDesc" selected="@(sortBy=="NameDesc")">Name ↓</option>
            <option value="NameAsc" selected="@(sortBy=="NameAsc")">Name ↑</option>
            <option value="RentalPriceAsc" selected="@(sortBy=="RentalPriceAsc")">Price ↑</option>
            <option value="RentalPriceDesc" selected="@(sortBy=="RentalPriceDesc")">Price ↓</option>
        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-primary">Filter</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped">
        <thead class="table-white">
            <tr>
                <th>@Html.DisplayNameFor(model => model.CarName)</th>
                <th>@Html.DisplayNameFor(model => model.Brand)</th>
                <th>@Html.DisplayNameFor(model => model.Model)</th>
                <th>@Html.DisplayNameFor(model => model.LicensePlate)</th>
                <th>Image</th>
                <th>@Html.DisplayNameFor(model => model.RentalPricePerDay)</th>
                <th>@Html.DisplayNameFor(model => model.Status)</th>
                <th>@Html.DisplayNameFor(model => model.SeatNumber)</th>
                <th>@Html.DisplayNameFor(model => model.EnergyType)</th>
                <th>@Html.DisplayNameFor(model => model.SellDate)</th>
                <th>@Html.DisplayNameFor(model => model.EngineType)</th>
                <th>@Html.DisplayNameFor(model => model.DistanceTraveled)</th>
                <th>@Html.DisplayNameFor(model => model.TransmissionType)</th>
                <th>@Html.DisplayNameFor(model => model.Category)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(m => item.CarName)</td>
                    <td>@Html.DisplayFor(m => item.Brand)</td>
                    <td>@Html.DisplayFor(m => item.Model)</td>
                    <td>@Html.DisplayFor(m => item.LicensePlate)</td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="Car Image" class="img-thumbnail" style="max-width:80px; max-height:60px;" />
                        }
                        else
                        {
                            <span class="text-muted">No image</span>
                        }
                    </td>
                    <td>@Html.DisplayFor(m => item.RentalPricePerDay)</td>
                    <td>@Html.DisplayFor(m => item.Status)</td>
                    <td>@Html.DisplayFor(m => item.SeatNumber)</td>
                    <td>@Html.DisplayFor(m => item.EnergyType)</td>
                    <td>@Html.DisplayFor(m => item.SellDate)</td>
                    <td>@Html.DisplayFor(m => item.EngineType)</td>
                    <td>@Html.DisplayFor(m => item.DistanceTraveled)</td>
                    <td>@Html.DisplayFor(m => item.TransmissionType)</td>
                    <td>@Html.DisplayFor(m => item.Category.CategoryName)</td>
                    <td>
                        <div class="btn-group">
                            <a asp-action="Edit" asp-route-id="@item.CarId" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.CarId" class="btn btn-sm btn-info text-white">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.CarId" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this car?');">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

@if (totalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <!-- First -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AdminIndex", new { page = 1, pageSize, sortBy, search = currentSearch })">« First</a>
            </li>

            <!-- Prev -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AdminIndex", new { page = page - 1, pageSize, sortBy, search = currentSearch })">‹ Prev</a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("AdminIndex", new { page = i, pageSize, sortBy, search = currentSearch })">@i</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AdminIndex", new { page = page + 1, pageSize, sortBy, search = currentSearch })">Next ›</a>
            </li>

            <!-- Last -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AdminIndex", new { page = totalPages, pageSize, sortBy, search = currentSearch })">Last »</a>
            </li>
        </ul>
    </nav>
}
