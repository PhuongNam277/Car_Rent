@model IEnumerable<Car_Rent.Models.Review>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout/_AdminLayout.cshtml";
    var total = (int)(ViewBag.TotalItems ?? 0);
    var page = (int)(ViewBag.Page ?? 1);
    var pageSize = (int)(ViewBag.PageSize ?? 10);
    var totalPages = (int)Math.Ceiling((double)total / pageSize);
    string? sortBy = ViewBag.SortBy;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Reviews</h2>
    <a class="btn btn-success" style="margin-top:12px" asp-action="Create">Create New</a>
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <select name="sortBy" class="form-select">
            <option value="ReviewDateDesc" selected="@(sortBy=="ReviewDateDesc")">Review Date ↓</option>
            <option value="ReviewDateAsc" selected="@(sortBy=="ReviewDateAsc")">Review Date ↑</option>
            <option value="RatingAsc" selected="@(sortBy=="RatingAsc")">RatingAsc ↑</option>
            <option value="RatingDesc" selected="@(sortBy=="RatingDesc")">RatingDesc ↓</option>

        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-primary">Filter</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-striped align-middle">
        <thead class="table-white">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Rating)</th>
                <th>@Html.DisplayNameFor(model => model.First().Comment)</th>
                <th>@Html.DisplayNameFor(model => model.First().ReviewDate)</th>
                <th>@Html.DisplayNameFor(model => model.First().JobName)</th>
                <th>@Html.DisplayNameFor(model => model.First().Car)</th>
                <th>@Html.DisplayNameFor(model => model.First().User)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(m => item.Rating)</td>
                    <td class="text-truncate" style="max-width:420px;">@Html.DisplayFor(m => item.Comment)</td>
                    <td>@Html.DisplayFor(m => item.ReviewDate)</td>
                    <td>@Html.DisplayFor(m => item.JobName)</td>
                    <td>@Html.DisplayFor(m => item.Car.CarName)</td>
                    <td>@Html.DisplayFor(m => item.User.Username)</td>
                    <td>
                        <div class="btn-group">
                            <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.ReviewId">Edit</a>
                            <a class="btn btn-sm btn-info text-white" asp-action="Details" asp-route-id="@item.ReviewId">Details</a>
                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.ReviewId"
                               onclick="return confirm('Are you sure you want to delete this review?');">
                                Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (totalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <!-- First -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize, sortBy })">« First</a>
            </li>

            <!-- Prev -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page - 1, pageSize, sortBy })">‹ Prev</a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize, sortBy })">@i</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page + 1, pageSize, sortBy })">Next ›</a>
            </li>

            <!-- Last -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize, sortBy })">Last »</a>
            </li>
        </ul>
    </nav>
}