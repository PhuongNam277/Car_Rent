
@model IEnumerable<Car_Rent.Models.Reservation>
@{
     ViewData["Title"] = "Reservation List"; 
     Layout = "~/Views/Shared/AdminLayout/_AdminLayout.cshtml";
	var total = (int)(ViewBag.TotalItems ?? 0);
	var page = (int)(ViewBag.Page ?? 1);
	var pageSize = (int)(ViewBag.PageSize ?? 10);
	var totalPages = (int)Math.Ceiling((double)total / pageSize);
	string? sortBy = ViewBag.SortBy;
 } 

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Reservations</h2>
    <a asp-action="Create" style="margin-top:12px" class="btn btn-success">Create New</a>
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
        <select name="sortBy" class="form-select">
            <option value="DateDesc" selected="@(sortBy=="DateDesc")">Newest</option>
            <option value="DateAsc" selected="@(sortBy=="DateAsc")">Oldest</option>
            <option value="StartDateAsc" selected="@(sortBy=="StartDateAsc")">StartDate ↑</option>
            <option value="StartDateDesc" selected="@(sortBy=="StartDateDesc")">StartDate ↓</option>
            <option value="PriceAsc" selected="@(sortBy=="PriceAsc")">Price ↑</option>
            <option value="PriceDesc" selected="@(sortBy=="PriceDesc")">Price ↓</option>
        </select>
    </div>
    <div class="col-auto">
        <button class="btn btn-primary">Filter</button>
    </div>
</form>

<table class="table table-bordered table-hover table-striped">
    <thead class="table-white">
        <tr>
            <th>@Html.DisplayNameFor(model => model.ReservationDate)</th>
            <th>@Html.DisplayNameFor(model => model.PickupLocationId)</th>
            <th>@Html.DisplayNameFor(model => model.DropoffLocationId)</th>
            <th>@Html.DisplayNameFor(model => model.StartDate)</th>
            <th>@Html.DisplayNameFor(model => model.EndDate)</th>
            <th>@Html.DisplayNameFor(model => model.TotalPrice)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.Car)</th>
            <th>@Html.DisplayNameFor(model => model.User)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(m => item.ReservationDate)</td>
                <td>@Html.DisplayFor(m => item.PickupLocation.Name)</td>
                <td>@Html.DisplayFor(m => item.DropoffLocation.Name)</td>
                <td>@Html.DisplayFor(m => item.StartDate)</td>
                <td>@Html.DisplayFor(m => item.EndDate)</td>
                <td>@Html.DisplayFor(m => item.TotalPrice)</td>
                <td>@Html.DisplayFor(m => item.Status)</td>
                <td>@Html.DisplayFor(m => item.Car.CarName)</td>
                <td>@Html.DisplayFor(m => item.User.Username)</td>
                <td>
                    <div class="btn-group">
                        <a asp-action="Edit" asp-route-id="@item.ReservationId" class="btn btn-sm btn-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.ReservationId" class="btn btn-sm btn-info text-white">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.ReservationId" class="btn btn-sm btn-danger">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (totalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <!-- First -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize, sortBy })">« First</a>
            </li>

            <!-- Prev -->
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page - 1, pageSize, sortBy })">‹ Prev</a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize, sortBy })">@i</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = page + 1, pageSize, sortBy })">Next ›</a>
            </li>

            <!-- Last -->
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = totalPages, pageSize, sortBy })">Last »</a>
            </li>
        </ul>
    </nav>
}
